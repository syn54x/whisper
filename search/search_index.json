{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#whisper","title":"<code>whisper</code> \ud83e\udd2b","text":"<p>Visit the docs</p> <p> </p>"},{"location":"#supported-models","title":"Supported Models","text":"Provider Name Supported by Whisper Config Key GPT4All \u2705 gpt4all ChatAnthropic \u2705 anthropic ChatMistralAI \u2705 mistral ChatFireworks \u2705 fireworks AzureChatOpenAI \u2705 azureopenai ChatOpenAI \u2705 openai ChatTogether \u274c ChatVertexAI \u274c ChatGoogleGenerativeAI \u274c ChatGroq \u274c ChatCohere \u274c ChatBedrock \u274c ChatHuggingFace \u274c ChatNVIDIA \u274c ChatOllama \u274c ChatLlamaCpp \u274c ChatAI21 \u274c ChatUpstage \u274c ChatDatabricks \u274c"},{"location":"#install","title":"Install","text":"<p>To install Whisper, you can use pip:</p> <pre><code>pipx install just-whisper\n</code></pre>"},{"location":"#setup","title":"Setup","text":"<p>After installing Whisper, you need to initialize the configuration for Whisper. This involves setting up API keys for the services you intend to use, such as OpenAI or Anthropic.</p> <p>To initialize the configuration, run:</p> <pre><code>$ whisper init\n</code></pre> <p>This will create a basic configuration file in your home directory (<code>~/.whisper/whisper.toml</code>).  You should update this file with your API keys.</p>"},{"location":"#setup-with-keys","title":"Setup with keys","text":"<p>If you have keys for OpenAI or Anthropic handy, you can initialize the configuration with:</p> <pre><code>$ whisper init --openai-key &lt;your-openai-key&gt; --anthropic-key &lt;your-anthropic-key&gt;\n</code></pre>"},{"location":"#config","title":"Config","text":"<p>The whisper config file is located at <code>~/.whisper/whisper.toml</code>.  It looks like this:</p> <pre><code># ~/.whisper/whisper.toml\n\ndefault = \"openai\"\n\n[openai]\napi_key = \"sk-proj-...\"\nmodel = \"gpt-3.5-turbo\"\n\n[anthropic]\napi_key = \"sk-ant-...\"\nmodel = \"claude-3-opus-20240229\"\n</code></pre>"},{"location":"#config-management","title":"Config Management","text":"<p>You can manage your config files using the <code>whisper config</code> command.  For example...</p>"},{"location":"#show-config","title":"Show Config","text":"<pre><code>\u276f whisper config show\nUserConfig(\n\u2502   default='openai',\n\u2502   openai=OpenAIConfig(api_key='replace-me', model='gpt-3.5-turbo'),\n\u2502   anthropic=AnthropicConfig(api_key='replace-me', model='claude-3-5-sonnet-20240620')\n)\n</code></pre>"},{"location":"#get-a-config-value","title":"Get A Config Value","text":"<pre><code>\u276f whisper config get openai.model\ngpt-3.5-turbo\n</code></pre>"},{"location":"#set-a-config-value","title":"Set A Config Value","text":"<pre><code>\u276f whisper config set openai.api_key \"sk-proj-...\"\nUserConfig(\n\u2502   default='openai',\n\u2502   openai=OpenAIConfig(api_key='sk-proj-...', model='gpt-3.5-turbo'),\n\u2502   anthropic=AnthropicConfig(api_key='replace-me', model='claude-3-5-sonnet-20240620')\n)\n</code></pre>"},{"location":"#support-me","title":"Support Me :)","text":"<p>If you found this project helpful, please consider supporting me by buying me a coffee.</p> <p>PayPal.Me</p> <p>ETH: <code>0x329941cDc2D84ddDf3c0b9dB9791bc787e64AE4E</code></p> <p>BTC: <code>3AVY6ySYGVJJHFo3ebrNYx9oSmqShLYrz8</code></p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#tbd-tbd","title":"[TBD] - TBD","text":""},{"location":"changelog/#added","title":"Added","text":""},{"location":"changelog/#changed","title":"Changed","text":""},{"location":"changelog/#deprecated","title":"Deprecated","text":""},{"location":"changelog/#removed","title":"Removed","text":""},{"location":"changelog/#fixed","title":"Fixed","text":""},{"location":"changelog/#security","title":"Security","text":""},{"location":"changelog/#016-2024-10-23","title":"[0.1.6] - 2024-10-23","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Add support for local models via GPT4All.</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Update the terminalizer gifs to be a bit smaller.</li> <li>Update <code>--config</code> to <code>--provider</code><ul> <li>Update config file to use new <code>--provider</code> flag.</li> <li>Update all usage of the <code>--config</code> flag to <code>--provider</code>.</li> </ul> </li> </ul>"},{"location":"changelog/#v015-2024-10-08","title":"[v0.1.5] - 2024-10-08","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Coverage shield is now in readme</li> <li>Add <code>-s / --system</code> option to <code>ask</code> command to specify the system prompt.<ul> <li>Allow piping content to Whisper as the <code>prompt</code> argument.</li> <li>e.g: <code>git diff | whisper -s \"Describe these changes\"</code></li> </ul> </li> </ul>"},{"location":"changelog/#v104-2024-10-07","title":"[v1.0.4] - 2024-10-07","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>80% test coverage.</li> </ul>"},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Updated readme to inclue donation options :)</li> <li>Updated the CLI command organization for the project.<ul> <li>Command groups are contained inside the <code>cli</code> directory.</li> <li>The <code>ask</code> group is the \"main\" command with other commands nested below it.  This allows us to use <code>ask</code> as the default command if none is specified.</li> </ul> </li> </ul>"},{"location":"changelog/#013-2024-10-01","title":"[0.1.3] - 2024-10-01","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Added support for Mistral, Fireworks and Azure OpenAI.</li> <li>Added <code>--copy/--no-copy</code> option to the <code>ask</code> command to copy the output to the clipboard.</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Better printing of the configuration file and themes.</li> </ul>"},{"location":"changelog/#012-2024-10-01","title":"[0.1.2] - 2024-10-01","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>Anthropic Integration #6</li> </ul>"},{"location":"changelog/#011-2024-10-01","title":"[0.1.1] - 2024-10-01","text":""},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>Add github-pages documentation using mkdocs #2</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Update <code>pyproject.toml</code> to specify Python version &gt;= 3.10.</li> <li>Update <code>pyproject.toml</code> to specify <code>uv</code> as the build system #3.</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Fix str has no snippet #3</li> </ul>"},{"location":"changelog/#010-2024-09-30","title":"[0.1.0] - 2024-09-30","text":""},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>Initial setup of the project structure.</li> <li>Basic command-line interface for the Whisper application.</li> <li>Project initialization with basic configuration and dependencies as specified in <code>pyproject.toml</code>.</li> <li>Implementation of Whisper CLI commands in <code>src/whisper/__init__.py</code> (startLine: 27, endLine: 92).</li> <li>Configuration management commands in <code>src/whisper/config.py</code> (startLine: 1, endLine: 36).</li> </ul>"},{"location":"cli/","title":"CLI","text":""},{"location":"cli/#whisper","title":"<code>whisper</code>","text":"<p>Usage:</p> <p><code>console $ whisper [OPTIONS] COMMAND [ARGS]...</code></p> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>ask</code>: The default command that takes a prompt...</li> <li><code>config</code></li> </ul>"},{"location":"cli/#whisper-ask","title":"<code>whisper ask</code>","text":"<p>The default command that takes a prompt and optional parameters to ask a question using Whisper.</p> <p>Usage:</p> <p><code>console $ whisper ask OPTIONS</code></p> <p>Arguments:</p> <ul> <li><code>[PROMPT]</code>: The question you want to ask Whisper  [default: (dynamic)]</li> </ul> <p>Options:</p> <ul> <li><code>-p, --provider TEXT</code>: The provider to be used (openai, anthropic, etc)</li> <li><code>-s, --system TEXT</code>: The system prompt to be used.  This can also be piped into Whisper...</li> <li><code>-m, --model TEXT</code>: The model that Whisper should use</li> <li><code>-t, --theme TEXT</code>: The theme that should be used for the output  [default: solarized-dark]</li> <li><code>--copy / --no-copy</code>: Copy the output to the clipboard</li> <li><code>-v, --verbose</code>: Increase verbosity level  [default: 0]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"cli/#whisper-config","title":"<code>whisper config</code>","text":"<p>Usage:</p> <p><code>console $ whisper config [OPTIONS] COMMAND [ARGS]...</code></p> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul> <p>Commands:</p> <ul> <li><code>get</code>: Get the current configuration for Whisper.</li> <li><code>init</code>: Initializes the configuration for Whisper,...</li> <li><code>set</code>: Initialize the configuration for Whisper.</li> <li><code>show</code>: Show the current configuration for Whisper.</li> <li><code>themes</code>: Prints a list of available syntax...</li> </ul>"},{"location":"cli/#whisper-config-get","title":"<code>whisper config get</code>","text":"<p>Get the current configuration for Whisper.</p> <p>Usage:</p> <p><code>console $ whisper config get [OPTIONS] KEY</code></p> <p>Arguments:</p> <ul> <li><code>KEY</code>: The key to get the value for.  Supports dot notation.  e.g. 'openai.api_key'  [required]</li> </ul> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"cli/#whisper-config-init","title":"<code>whisper config init</code>","text":"<p>Initializes the configuration for Whisper, saving API keys to a local file.</p> <p>Usage:</p> <p><code>console $ whisper config init [OPTIONS]</code></p> <p>Options:</p> <ul> <li><code>--openai-key TEXT</code>: The OpenAI API key to use</li> <li><code>--anthropic-key TEXT</code>: The Anthropic API key to use</li> <li><code>--azureopenai-key TEXT</code>: The Azure OpenAI API key to use</li> <li><code>--mistral-key TEXT</code>: The Mistral API key to use</li> <li><code>--fireworks-key TEXT</code>: The Fireworks API key to use</li> <li><code>--show / --no-show</code>: Show the configuration  [default: show]</li> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"cli/#whisper-config-set","title":"<code>whisper config set</code>","text":"<p>Initialize the configuration for Whisper.</p> <p>Usage:</p> <p><code>console $ whisper config set [OPTIONS] KEY VALUE</code></p> <p>Arguments:</p> <ul> <li><code>KEY</code>: The key to set the value for.  Supports dot notation.  e.g. 'openai.api_key'  [required]</li> <li><code>VALUE</code>: The value to set the key to.  [required]</li> </ul> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"cli/#whisper-config-show","title":"<code>whisper config show</code>","text":"<p>Show the current configuration for Whisper.</p> <p>Usage:</p> <p><code>console $ whisper config show [OPTIONS]</code></p> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"cli/#whisper-config-themes","title":"<code>whisper config themes</code>","text":"<p>Prints a list of available syntax highlighting themes from Pygments.</p> <p>Usage:</p> <p><code>console $ whisper config themes [OPTIONS]</code></p> <p>Options:</p> <ul> <li><code>--help</code>: Show this message and exit.</li> </ul>"},{"location":"guide/","title":"User Guide","text":"<p>Below is a guide to help you get the most out of Whisper.</p>"},{"location":"guide/#setup-config","title":"Setup / Config","text":"<p>The first thing you should do is setup your config by running</p> <pre><code>\u276fwhisper config init\n</code></pre> <p>This will create a <code>whisper.toml</code> file in the <code>~/.whisper</code> directory.  You can then edit this file to set the API keys for the different LLM providers you want to use.</p>"},{"location":"guide/#edit-a-config-value","title":"Edit A Config Value","text":"<p>You can always edit the <code>whisper.toml</code> file directly to change your config.  But you can also use the <code>whisper config set</code> command to change the config.  For example, to change the API key for the OpenAI provider, you can run:</p> <pre><code>\u276f whisper config set openai.api_key YOUR_API_KEY\n</code></pre> <p>Or, if you have your key stored in an environment variable, you can run:</p> <pre><code>\u276fwhisper config set openai.api_key $YOUR_API_KEY\n</code></pre>"},{"location":"guide/#read-a-config-value","title":"Read A Config Value","text":"<p>You can read a config value by running <code>whisper config get &lt;key&gt;</code>.  For example, to read the API key for the OpenAI provider, you can run:</p> <pre><code>\u276f whisper config get openai.api_key\n</code></pre>"},{"location":"guide/#show-all-config-values","title":"Show All Config Values","text":"<p>You can show all the config values by running <code>whisper config show</code>.</p>"},{"location":"guide/#list-all-available-code-themes","title":"List all available code themes","text":"<p>You can list all the available code themes by running <code>whisper config themes</code>.</p>"},{"location":"guide/#local-models-with-gpt4all","title":"Local Models With GPT4All","text":"<p>Whisper supports using local models via GPT4All.  To use a local model, you can set the <code>local_path</code> and <code>local_model</code> for the <code>gpt4all</code> provider in the <code>whisper.toml</code> file.  For example:</p> <pre><code>[gpt4all]\nlocal_path = \"~/.local/share/nomic.ai/GPT4All\"\nlocal_model = \"Meta-Llama-3-8B-Instruct.Q4_0.gguf\"\n</code></pre> <p>If you're unfamiliar with GPT4All, you can learn more here.</p>"},{"location":"guide/#asking-questions","title":"Asking Questions","text":"<p>Asking your LLM questions is easy!  After you've setup your whisper config, you can start asking questions by running <code>whisper ask \"&lt;your question&gt;\"</code>.</p> <p>Or even simpler, the CLI defaults to the <code>ask</code> sub-command, so you can simply run <code>whisper \"&lt;your question&gt;\"</code> as a convenience.</p> <pre><code>\u276f whisper \"What is the capital of france?\"\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Capital of France \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 The capital of France is Paris.                                                \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"guide/#using-a-different-provider","title":"Using A Different Provider","text":"<pre><code>\u276f whisper \"What is the capital of france?\" -p anthropic\n</code></pre> <p>You're config file defaults to using the OpenAI provider.  But you can change that with the <code>-p/--provider</code> option.  For example, to use the Anthropic provider, you can run:</p> <p></p> <p>You can also change the default provider in the <code>whisper.toml</code> file, or by running:</p> <pre><code>\u276f whisper config set default.provider \"anthropic\"\n</code></pre>"},{"location":"guide/#using-a-different-model","title":"Using A Different Model","text":"<pre><code>\u276f whisper \"What is the capital of france?\" -m gpt-3.5-turbo\n</code></pre> <p>You can easily change the model using the <code>-m/--model</code> option.</p> <p></p>"},{"location":"guide/#asking-code-related-questions","title":"Asking Code Related Questions","text":"<pre><code>\u276f whisper \"How do I sort a list in python?\"\n</code></pre> <p>Displaying beautiful code snippets in your terminal is one of the core features of Whisper...</p> <p></p>"},{"location":"guide/#using-a-different-code-theme","title":"Using A Different Code Theme","text":"<pre><code>\u276f whisper \\\n    \"What's that terminal command to close a process that is using port 8080?\" \\\n    -t coffee \\\n</code></pre> <p>The default theme is <code>solarized-dark</code>.  But you can change that at runtime with the <code>-t/--theme</code> option.  For example, to use the <code>github</code> theme, you can run:</p> <p></p> <p>If you want to permanently change the theme, you can edit the <code>theme</code> option in the <code>whisper.toml</code> file.</p> <pre><code>whisper config set default.theme \"coffee\"\n</code></pre>"},{"location":"guide/#copy-a-snippet","title":"Copy A Snippet","text":"<pre><code>\u276f whisper \"What's that terminal command to close a process that is using port 8080?\" --copy\n</code></pre> <p>You can copy a snippet to your clipboard using the <code>--copy</code> option.  For example:</p> <p></p> <p>You can also change the default behavior of whether or not to copy a snippet by setting the <code>copy_snippet</code> option in the <code>whisper.toml</code> file, or by running:</p> <pre><code>\u276f whisper config set default.copy_snippet true\n</code></pre>"},{"location":"guide/#using-the-system-prompt","title":"Using The System Prompt","text":"<p>You can use the <code>-s/--system</code> option to change the system prompt.</p> <pre><code>whisper -s \"You are a data scientist\" \"How do I instantiate a linear regression model in python?\"\n</code></pre>"},{"location":"guide/#piping-context-to-the-model","title":"Piping (<code>|</code>) Context To The Model","text":"<pre><code>\u276f cat my_script.py | whisper -s \"What is happening in this code?\"\n</code></pre> <p>Sometimes you might want to interrogate a file or content from the web.  You can do this by piping the content to the model.  For example:</p> <p></p>"}]}